/*!
 * Card Check Standalone
 * 
 * A credit card validator and type guesser 
 * 
 * This is the standalone version of CardCheck.
 * It uses the jQuery methods $.extend and $.inArray
 *  
 * For documentation, look in the package you downloaded or go to
 * http://eclarian.com/cardcheck/
 * 
 * NOTE: This is not open source software and you must purchase
 * a license to legally use.
 * 
 * @uses       jQuery
 * @author     Eclarian Dev Team <eclarian@eclarian.com>
 * @copyright  Eclarian LLC
 * @date       November 29, 2011
 * @updated    March 20, 2013
 * @version    2.0.0
 */
(function(a,b){"use strict";if(!a.CardCheck){var c={cardNumber:null,allowSpaces:!0,acceptedCards:["visa","mastercard","amex","diners","discover","jcb","maestro"],niceNames:{visa:"Visa",mastercard:"Mastercard",amex:"American Express",discover:"Discover",diners:"Diners Club",jcb:"JCB",maestro:"Maestro"},regExpNumCheck:"^[0-9]+$",regExpApprox:{visa:"^4",mastercard:"^5[1-5]",amex:"^(34|37)",discover:"^6011",diners:"^(30|36|38|39)",jcb:"^35",maestro:"^(5018|5020|5038|6304|6759|6761|6762|6763)"},startNum:{visa:["4"],mastercard:["5"],amex:["3"],discover:["6"],diners:["3"],jcb:["3","2","1"],maestro:["5","6"]},cardLength:{visa:[13,16],mastercard:[16],amex:[15],discover:[16],diners:[14],jcb:[15,16],maestro:[12,13,14,15,16,17,18,19]}},d=function(a){return Math.min.apply(Math,a)},e=function(a){return Math.max.apply(Math,a)},f=function(a){return this instanceof f?(this._callbacks={},this._settings={},"number"==typeof a||"string"==typeof a?this.options().cardNumber(a):this.options(a)):new f(a)};f.prototype={_cardNumber:null,_cardType:null,_isValid:void 0,_numCheck:null,cardNumber:function(a){return a===void 0?this._cardNumber:(a=""+a,this._settings.allowSpaces===!0&&(a=a.replace(/\s/g,"")),this._cardNumber===a?this:(this._cardNumber=a,this.evaluate()))},cardType:function(a){return this._cardType?a?this._settings.niceNames[this._cardType]:this._cardType:null},niceName:function(a){return this._settings.niceNames[a]?this._settings.niceNames[a]:""},eachCard:function(a){for(var b=0;this._settings.acceptedCards.length>b;b++){var c=this._settings.acceptedCards[b],d=a(c);if(d===!1)return!1}return this},evaluate:function(){if(this._numCheck||(this._numCheck=RegExp(this._settings.regExpNumCheck)),this._cardNumber)if(this._cardNumber.match(this._numCheck)){var a=this;this.eachCard(function(c){if(1===a._cardNumber.length&&c in a._settings.startNum){if("3"===a._cardNumber||"6"===a._cardNumber)return a._switchState(null),!0;if(-1!==b.inArray(a._cardNumber,a._settings.startNum[c]))return a._switchState(null,c),!1}else if(2===a._cardNumber.length&&("60"===a._cardNumber||"65"===a._cardNumber))return a._switchState(null,"discover"),!1;var f,g=!1,h=!1,i=!1;return c in a._settings.cardLength&&-1!==b.inArray(a._cardNumber.length,a._settings.cardLength[c])?g=!0:a._cardNumber.length>=e(a._settings.cardLength[c])?(g=!0,h=!0,i=a._cardNumber.length>e(a._settings.cardLength[c])):a._isValid===!0&&a._delayState(null),c in a._settings.regExpApprox&&(f=RegExp(a._settings.regExpApprox[c]),a._cardNumber.match(f))?g===!1?(a._switchState(null,c),!1):(a.luhnCheck(a._cardNumber)!==!0||i?h?a._switchState(!1,c):a._cardNumber.length<d(a._settings.cardLength[c])&&a._switchState(null,c):a._switchState(!0,c),!1):void 0})}else this._switchState(!1);else this._switchState(null);return this},luhnCheck:function(a){var b=[[0,2,4,6,8,1,3,5,7,9],[0,1,2,3,4,5,6,7,8,9]],c=0;return a.replace(/\D+/g,"").replace(/[\d]/g,function(a,d,e){c+=b[1&e.length-d][parseInt(a,10)]}),0===c%10&&c>0},options:function(a){var d,e=!1;return a=a||{},a.cardNumber&&(d=a.cardNumber,e=!0,delete a.cardNumber),this._settings=b.extend({},c,a),e&&this.cardNumber(d),this},onToggle:function(a){return this._setCallback("onToggle",a)},onValid:function(a){return this._setCallback("onValid",a)},onValidation:function(a){return this.onValid(a)},onInvalid:function(a){return this._setCallback("onInvalid",a)},onError:function(a){return this.onInvalid(a)},onUnknown:function(a){return this._setCallback("onUnknown",a)},onGuess:function(a){return"function"!=typeof a?this:this.onUnknown(function(b){b&&a(b)})},onReset:function(a){return"function"!=typeof a?this:this.onUnknown(function(b){b||a()})},onCardChange:function(a){return this._setCallback("onCardChange",a)},onTypeUpdate:function(a){return this.onCardChange(a)},_setCallback:function(a,b){return"function"!=typeof b?this:(this._callbacks[a]||(this._callbacks[a]=[]),this._callbacks[a].push(b),this)},_runCallbacks:function(a,b,c){var d=this._callbacks[a];if(!d||0===d.length)return this;b=b||null,c=c||this;for(var e=0;d.length>e;e++)d[e].apply(c,b);return this},_setCardType:function(a){return this._cardType!==a&&this._runCallbacks("onCardChange",[a,this.niceName(a)]),this._cardType=a,this},_delayState:function(a,b){var c=this;return setTimeout(function(){a!==c._isValid&&c._switchState(a,b)},50),this},_switchState:function(a,b){return b===void 0&&(b=null),a===this._isValid&&this._cardType===b?this:(this._setCardType(b),this._isValid=a,a===!0?this._runCallbacks("onValid",[b,this.niceName(b)]):a===!1?this._runCallbacks("onInvalid"):null===a&&this._runCallbacks("onUnknown",[b,this.niceName(b)]),this._runCallbacks("onToggle",[a,b,this.niceName(b)]),this)}},a.CardCheck=f}})(window,jQuery);